@* @model ProCareMvc.presentation.Models.ShowDoctorInHomePageVM *@

@* @{ *@
@*     ViewData["Title"] = "Doctor Profile"; *@
@* } *@

@* <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous"> *@

@* <div class="container my-5"> *@
@*     <h1 class="text-center mb-5 fw-bold text-primary">Doctor Profile</h1> *@
@*     <div class="row justify-content-center"> *@
@*         <div class="col-md-6"> *@
@*             <div class="card shadow-sm border-0"> *@
@*                 <img src="/images/@Model.ImageUrl" class="card-img-top img-fluid rounded-circle mx-auto d-block mt-3" alt="@Model.FullName" style="width: 200px; height: 200px; object-fit: cover;" /> *@
@*                 <div class="card-body text-center"> *@
@*                     <h2 class="card-title fw-bold text-dark mb-3">@Model.FullName</h2> *@
@*                     <p class="card-text text-muted mb-2"><strong>Department:</strong> @Model.DepartmentName</p> *@
@*                     <p class="card-text mb-2"><strong>Experience:</strong> @Model.YearsOfExperience Years</p> *@
@*                     <p class="card-text mb-4"><strong>Contact:</strong> @Model.PhoneNumber</p> *@
@*                     <a asp-action="Index" asp-controller="Home" class="btn btn-outline-secondary">Back to List</a> *@
@*                 </div> *@
@*             </div> *@
@*         </div> *@
@*     </div> *@
@* </div> *@

@* <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script> *@
@model ProCareMvc.presentation.Models.ShowDoctorInHomePageVM

@{
    ViewData["Title"] = "Doctor Profile";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<style>
    .profile-card {
        background: #fff;
        border-radius: 10px;
        padding: 1.5rem;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .appointment-day {
        margin-bottom: 1rem;
    }

    .appointment-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.5rem;
        margin-bottom: 0.5rem;
        background: #f8f9fa;
        border-radius: 5px;
    }

    .appointment-time {
        color: #28a745;
        font-weight: bold;
    }

    .btn-book {
        padding: 0.2rem 0.8rem;
        font-size: 0.9rem;
        transition: transform 0.2s;
    }

        .btn-book:hover {
            transform: scale(1.05);
        }

    .accordion-button {
        font-weight: bold;
        background-color: #e9ecef;
    }

        .accordion-button:not(.collapsed) {
            background-color: #d4edda;
            color: #155724;
        }

    .confirmation-popup {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 10000;
        display: none;
        max-width: 450px;
        width: 90%;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 5px 20px rgba(0,0,0,0.3);
        animation: fadeIn 0.3s ease-in-out;
    }

        .confirmation-popup.show {
            display: block;
        }

        .confirmation-popup .card-header {
            background: linear-gradient(135deg, #28a745, #218838);
            color: white;
            border-radius: 15px 15px 0 0;
            padding: 1rem;
            text-align: center;
        }

        .confirmation-popup .card-body {
            padding: 1.5rem;
        }

        .confirmation-popup .btn-success {
            background-color: #28a745;
            border: none;
            padding: 0.5rem 1.5rem;
            transition: background-color 0.2s;
        }

            .confirmation-popup .btn-success:hover {
                background-color: #218838;
            }

        .confirmation-popup .btn-secondary {
            padding: 0.5rem 1.5rem;
        }
    @@keyframes fadeIn {
        from {
        opacity: 0;
        transform: translate(-50%, -60%);
    }

    to {
        opacity: 1;
        transform: translate(-50%, -50%);
    }

    }
</style>

<div class="container my-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="profile-card">
                <h2 class="text-center mb-3">@Model.FullName</h2>
                <p class="text-center">Department: @Model.DepartmentName</p>
                <p class="text-center">Experience: @Model.YearsOfExperience Years</p>
                <p class="text-center">Phone: @Model.PhoneNumber</p>
                <img src="/images/@Model.ImageUrl" class="img-fluid rounded-circle mx-auto d-block mb-3" alt="@Model.FullName" style="width: 120px; height: 120px; object-fit: cover;" />

                <h4 class="text-center mt-4">Available Appointments</h4>
                @if (Model.AvailableAppointments.Any())
                {
                    <div class="mt-3 accordion" id="appointmentsAccordion">
                        @{
                            var groupedAppointments = Model.AvailableAppointments
                            .GroupBy(a => a.StartTime.Date)
                            .OrderBy(g => g.Key);
                        }
                        @foreach (var dayGroup in groupedAppointments)
                        {
                            <div class="appointment-day accordion-item">
                                <h2 class="accordion-header" id="heading-@dayGroup.Key.ToString("yyyy-MM-dd")">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                                            data-bs-target="#collapse-@dayGroup.Key.ToString("yyyy-MM-dd")"
                                            aria-expanded="false" aria-controls="collapse-@dayGroup.Key.ToString("yyyy-MM-dd")">
                                        @dayGroup.Key.ToString("dddd, MMMM dd, yyyy")
                                    </button>
                                </h2>
                                <div id="collapse-@dayGroup.Key.ToString("yyyy-MM-dd")"
                                     class="accordion-collapse collapse"
                                     aria-labelledby="heading-@dayGroup.Key.ToString("yyyy-MM-dd")"
                                     data-bs-parent="#appointmentsAccordion">
                                    <div class="accordion-body">
                                        @foreach (var appointment in dayGroup.OrderBy(a => a.StartTime))
                                        {
                                            <div class="appointment-item">
                                                <span class="appointment-time">
                                                    @appointment.StartTime.ToString("HH:mm") - @appointment.EndTime.ToString("HH:mm")
                                                </span>
                                                <button class="btn btn-success btn-book"
                                                        data-time="@appointment.StartTime.ToString("yyyy-MM-dd HH:mm")"
                                                        data-doctor="@Model.Id"
                                                        data-doctor-name="@Model.FullName">
                                                    Book
                                                </button>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="text-center text-muted mt-3">No available appointments for the next 3 days.</p>
                }

                <div class="text-center mt-4">
                    <a asp-action="Index" asp-controller="Home" class="btn btn-outline-secondary">Back to List</a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Popup لتأكيد الحجز -->
<div class="confirmation-popup card" id="confirmationPopup">
    <div class="card-header">
        <h5 class="mb-0">Confirm Your Appointment</h5>
    </div>
    <div class="card-body">
        <p><strong><i class="fas fa-user-md me-2"></i>Doctor:</strong> <span id="popupDoctor"></span></p>
        <p><strong><i class="fas fa-clock me-2"></i>Time:</strong> <span id="popupTime"></span></p>
        <p><strong><i class="fas fa-dollar-sign me-2"></i>Amount:</strong> $50</p>
        <div class="text-center mt-4">
            <button class="btn btn-success me-2" id="confirmBook">Confirm</button>
            <button class="btn btn-secondary" id="cancelBook">Cancel</button>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const bookButtons = document.querySelectorAll(".btn-book");
        const confirmationPopup = document.getElementById("confirmationPopup");
        const popupTime = document.getElementById("popupTime");
        const popupDoctor = document.getElementById("popupDoctor");
        const confirmBook = document.getElementById("confirmBook");
        const cancelBook = document.getElementById("cancelBook");
        let currentUrl = "";

        bookButtons.forEach(button => {
            button.addEventListener("click", function () {
                const time = this.getAttribute("data-time");
                const doctorId = this.getAttribute("data-doctor");
                const doctorName = this.getAttribute("data-doctor-name");
                popupTime.textContent = time;
                popupDoctor.textContent = doctorName;
                currentUrl = `/Payment/Book?startTime=${encodeURIComponent(time)}&doctorId=${doctorId}`;
                confirmationPopup.classList.add("show");
            });
        });

        confirmBook.addEventListener("click", function () {
            window.location.href = currentUrl;
            confirmationPopup.classList.remove("show");
        });

        cancelBook.addEventListener("click", function () {
            confirmationPopup.classList.remove("show");
        });

        // إغلاق الـ Popup لما تضغط برا
        document.addEventListener("click", function (e) {
            if (!confirmationPopup.contains(e.target) && !e.target.classList.contains("btn-book")) {
                confirmationPopup.classList.remove("show");
            }
        });
    });
</script>